
## Config OAuth2 pour accéder aux routes protégées {baseUrl}/secure/** 
## Exemple /secure/bean?name=Jimbe 

# Google auth provider
spring.security.oauth2.client.registration.google.client-id=656590843516-d87roc2opg8u7lpm2mqu71javnhmcqj6.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=W3Nw2SgqEX_kIHtGavbKpuYw
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oidcAuth
#spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token


# Github auth provider
spring.security.oauth2.client.registration.github.client-id=c7095652bb76a08f3d8c
spring.security.oauth2.client.registration.github.client-secret=9b6cf21248d44efcbf866fb14f02f1450ecf84c0
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oidcAuth

# Keycloak auth provider
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.keycloak.client-id=oidcDemoApp
spring.security.oauth2.client.registration.keycloak.client-secret=f24fa57d-a8bc-4993-8a3d-afddbf3c6903
spring.security.oauth2.client.registration.keycloak.redirect-uri={baseUrl}/oidcAuth
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8080/auth/realms/OIDC-demo/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/auth/realms/OIDC-demo/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8080/auth/realms/OIDC-demo/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8080/auth/realms/OIDC-demo/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.keycloak.userNameAttribute=preferred_username